name: Run Tests

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

jobs:
  unit-tests:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Set up Google Application Credentials
      run: |
        jq -n --arg client_id "${{ secrets.GAC_CLIENT_ID }}" \
              --arg client_secret "${{ secrets.GAC_CLIENT_SECRET }}" \
              --arg quota_project_id "${{ secrets.GAC_QUOTA_PROJECT_ID }}" \
              --arg refresh_token "${{ secrets.GAC_REFRESH_TOKEN }}" \
              --arg type "${{ secrets.GAC_TYPE }}" \
              '{
                client_id: $client_id,
                client_secret: $client_secret,
                quota_project_id: $quota_project_id,
                refresh_token: $refresh_token,
                type: $type
              }' > /tmp/gcp-credentials.json
        chmod 644 /tmp/gcp-credentials.json
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-credentials.json

    - name: Make run_tests.sh executable
      run: chmod +x run_tests.sh
    
    - name: Run unit tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
        GCP_PROJECT_NAME: ${{ secrets.GCP_PROJECT_NAME }}
        SUNO_API_KEY: ${{ secrets.SUNO_API_KEY }}
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-credentials.json
      run: ./run_tests.sh docker unit
    
    - name: Clean up
      if: always()
      run: rm -f /tmp/gcp-credentials.json

  smoke-tests:
    needs: unit-tests
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Set up Google Application Credentials
      run: |
        jq -n --arg client_id "${{ secrets.GAC_CLIENT_ID }}" \
              --arg client_secret "${{ secrets.GAC_CLIENT_SECRET }}" \
              --arg quota_project_id "${{ secrets.GAC_QUOTA_PROJECT_ID }}" \
              --arg refresh_token "${{ secrets.GAC_REFRESH_TOKEN }}" \
              --arg type "${{ secrets.GAC_TYPE }}" \
              '{
                client_id: $client_id,
                client_secret: $client_secret,
                quota_project_id: $quota_project_id,
                refresh_token: $refresh_token,
                type: $type
              }' > /tmp/gcp-credentials.json
        chmod 644 /tmp/gcp-credentials.json
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-credentials.json

    - name: Make run_tests.sh executable
      run: chmod +x run_tests.sh
    
    - name: Run smoke tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
        GCP_PROJECT_NAME: ${{ secrets.GCP_PROJECT_NAME }}
        SUNO_API_KEY: ${{ secrets.SUNO_API_KEY }}
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-credentials.json
      run: ./run_tests.sh docker smoke
    
    - name: Clean up
      if: always()
      run: rm -f /tmp/gcp-credentials.json

  integration-tests:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    
    - name: Set up Google Application Credentials
      run: |
        jq -n --arg client_id "${{ secrets.GAC_CLIENT_ID }}" \
              --arg client_secret "${{ secrets.GAC_CLIENT_SECRET }}" \
              --arg quota_project_id "${{ secrets.GAC_QUOTA_PROJECT_ID }}" \
              --arg refresh_token "${{ secrets.GAC_REFRESH_TOKEN }}" \
              --arg type "${{ secrets.GAC_TYPE }}" \
              '{
                client_id: $client_id,
                client_secret: $client_secret,
                quota_project_id: $quota_project_id,
                refresh_token: $refresh_token,
                type: $type
              }' > /tmp/gcp-credentials.json
        chmod 644 /tmp/gcp-credentials.json
      env:
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-credentials.json

    - name: Make run_tests.sh executable
      run: chmod +x run_tests.sh
    
    - name: Run integration tests
      env:
        OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
        GCP_PROJECT_NAME: ${{ secrets.GCP_PROJECT_NAME }}
        SUNO_API_KEY: ${{ secrets.SUNO_API_KEY }}
        GOOGLE_APPLICATION_CREDENTIALS: /tmp/gcp-credentials.json
      run: ./run_tests.sh docker integration
    
    - name: Clean up
      if: always()
      run: rm -f /tmp/gcp-credentials.json

